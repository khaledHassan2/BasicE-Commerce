<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASsAAACoCAMAAACPKThEAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAG5UExURf///+bn6fr8+xAuUPPz9dHS1gdOjHa25B14vtPU2PmphA9VkMnm+BRAbc/Q1GWu4ZfJ
        7AkQFkGPzc/k9drq99vc3+jp6wgbLPDw8vL5/bGytwBJirrZ8QlIgAAAAN7f4u32/ABBhru8wRZPg67S
        78XGyg05ZgBgrxdqtYvB6AAkSgAcRVib0gBxvBhrrePw+UR2ofCacn+75qPN7CU/XgAZRA40WwARQLi5
        vgpEeAAiSQAMIgAAGNPq+MHQ33KRtAAzZf3q4hRioT9TbZltYpClvtB7Vk1fdgANP0aMxaLP74aw1y2B
        w1+g1XOfyae70PzTwWp5jENwoFZCTvibbseGa+eWcfSqiWZSWPvCqVtviZx3dvzPu/3m3MKLd+qigSRI
        aZBWRNK/ugA5g+KpkkYrHura1dWQc9FzQ4F9lTBbhqWwvZu0zF5/oqzG3YWhvwAmXj58sUFhhUpyn6Zz
        ZItwdHdaWrOKg9aqnmeDpEFBVGJwhZmhrNGCX+XGu0dZcIWPnrCXnMKhoAkjPElSXImKjCw8RVeOugk6
        WnSNoAAAI2pweEJESAAaNy4vRq5oTTUsMVNAQHVMPrb2/vEAABlSSURBVHhe7Z39W9tGtsclWZYsy5aM
        X8YyMtgG24kN2NgEEkgwCQlkEwIsLCFt2t1k296Q5bUJ222yJWnatE17u7t39/7F9zlnRq9Aml/u8yDs
        7/M0NSNbyB/OOXNm5ozEcUHQrL+hJ59y9qui3TRrv+zJrdm0v6U56/DryaMmhSU0000wp9xs0/+OnmwB
        m1w+Abrb5ISeUb1fTSQFyvsP9eRV0UaVqMX8B3vy6K7DKlHr9YHvk+2BZfin54XvE8T12Gw5EYvFIL5z
        zXQ6ne6FeK9yKA7Mafbu7Gy+NguGxVp78qiYnp1NNymrxN0y/Aus/G/ryRH44CzE97vUB3s6XWmIV2Bc
        ZWDVi+3v1d1EIg/GBf/UekOc96rJTAqMK8/14vp7la5hqJq9Cx7YGz2/X03sAmdZsEr3JrBOkVCEEeFs
        InF31hoN5po9PzxJOAtarKXuJvKxRG/k/D4VcRa0WYuVE/lyouw/3JNL1NvSozh4lpf8h3s6pvTYvWV9
        OTnWY/XbSo9FQD1WH6JlCquXK3yIVhqRSKOH6oPUKZmlOX9jTycrvdrxN/XUU0///yoQf0tPJ0tYLa33
        wtQHKNeZU0sD1y/5238v+Fu6XrtSyZyeCo2s+Q9Eb/hbulzCekmars/UL/1B8R0RN3wNXa/DkjQVunV/
        s7XxwHfkxobQc0K3Op9Phz7abLVa0Wjrj95DN1rRaPRjb1tX62E9dAlJHeeCrFq9mGVJuDQ1YH5CUUWj
        3mM3oq1oy9fWzRJVqRr6iKHy2ZDQarVa/iDWxRKGQ/X6305mxUVb0ein3qau1u2RT0KfMFZRX3AHu+r1
        hI6u/O5P0UensDKefNozK7duhixSx1iJIuF7duWS+PjPi5unseJ50dvU7fpskcHyJ6NgVz1WXj1qbb56
        tbm56UPFdQqFDO9r63IJn0U3oMu7n/G25z43JfPQ/jFf7pUYCauGcOOLxVbr1X91Uu66mJypqqpqBfdE
        vplIcYIoit07ok7fMdVVIfdka3Hxab85Fhm1racIrEwGT2hzHFfjOEEQgFc3Eksvj0VU1dwVRPHJi7+Q
        w/lIpHHEjjWRlYWuBraV4xgnBOY6z/lX5+GXY5EIEFkQRTF3LzUnNSKR69t05j2NrKwtmM1aM9XmOOQk
        dBknjiuOjjXicWSlmjsZsXCvc6iqkYhaNeeARQdZ2SsWxUQ5x2HAAsvynuq8q4lFHsMqslLnKxVtZXcP
        7KpRHZbU1WOsOKj1o7FdELrMru4gq0g8Mj8/r6rSnFZZlY+AVSQeV1VzvElZrdofoHWRLLS7TnT+tU+L
        hyLgdWBa0lClIq+a8BOwUiVzTwJWu/Yn3DWkXeWDOUoqoqrxSKQBbMYVrT2hqg1gNQ1uCahUacH+SNfW
        2y6hWQGkeCMyj1R2lFobAlYjzmBhq1Nf1K2sUhctVGp8mHaF0nhmQn4nRZAVumGPFeqegwrSBrQsU9uX
        36mRSOM6whqmrA7sz3QpK+qBDFV8nsKSFjryqBqJjO5UKa348LBa8uYM3aeUBxU4IfwkjWtgV2NLnLhQ
        /fJ6tRqvXv/SSRm6kxXtA8HBpqn9wI/ghZQV7lvSFh4+336+YLg+1pWsRhkbaa6KqKqQgDZUVaq036mR
        i/ZEgy+J6kZWC+CBgGaOe0hhQcCC6Yah2h01MuZ/P0hI5WP57tvz1Smx8LTOcR3W5VFDM3dqd+Yjd/wf
        gHGzrIPa3WZa6zjma6gSxCIarzBgNVRpJ3FnPrLi/wBMXsmxYjNVbuswi9UdyqWaXE7FEWBkHpOBBTQs
        DFgRVVqYuDN/0lacos72yE1YL8690rVYLQasID5RJgXqhBiw5qW5iWfzYxO5Wi3l+6BuNdR075HzKJhJ
        EWC6vM2tqzhAjlzE3OA5Rndk1ZBeAqtOrcmVvTdncFjl9XO9mGMvJTTLHJdLcKswLYUZFuxQ2kHDoj9L
        h/vPGmOpBNiP4F58cFil9GO39TtPYhPkophrC0IizXHjDNYYRHERWWFHGFHXgVUabiRTy7lXa7qGlTM/
        Ptuu4Teds2ABAXRCymp+e+JZY6xZrOUnJjg6VyzgJ7uGlUs5dpvVXZPG93scx710sVJrzxpjRS5Xhve5
        ViG6mRXXkRDW2ATH/eKwaqhLYFee0Qw6YVez4przkjqPeQMOcxgrCVilj4/8TmWVb8Mtes7l5LvDisuN
        m+p8pCkat+NVqx+MSCvPGpHlRLnc9H7901g1a1yuVnRFxHOkXD42UZPbNPc+kF5mRPH1xoNvqzS/ikSk
        d88akVEY+8me/Pw0VqkYxzUn6Fq0q9s8D8ojhURbhwyK40TC87lPW9Gt61XGSlXnG5EVrjibb+tQ62Hp
        NFa5GixH2xlcwNfu3X/ohF5LoXNNWMk34V/DNoB4laKC6b8Gdo6QoE84nzyNFZeq5dtpO71wHwmULK+w
        G2L2t0/rVvAWHmy0oo+qOM9gsWJzfTXZma46lRWXzkPyH+C1aCszAk5F+xvXZItbUbeHe52PtqK3q7Qb
        xLnSRmRsH4+4R36ns2I350YFMlahR9ACqUSiZkVpx6lcrH65fr3KpmQsVpFlPOKm8mGsAim0K8DFTaRh
        aEcbnaknFys6zcBQMVZJPNItrFgXLmAxHmOVO5EVzvWx7Aon4Rt05PMhrHKpfIo+TUAowx8lkHISnXaO
        m2Wu52LleqlNTsXjlgsCq/lIZBSP/CarNE7By7WJfJPW3QZc6XbNilIuQFwb+7hiOn93rx4K+Vjh7IOL
        inEyq5wsp5rp/ERb1jEXqwUytHtkD+3crFK6nKi1wSqeh0DDjBayKhXYe6h7Ef5kVimrLddMgZsngn9v
        oxNZcam2LtfKqSZ3E1nFJUmabzQiEXW4Os0qGFI6DB4Nnicns8rrDpxmLZ0K5gpP0cmpTmTlzhkvIauq
        xFQNheIlWp3W1POcyPMfxIrLlaHuNlhqpso1WddlZ3xynJXg3ufmZVWF1yaruGrLPAFWp8QrD6vgqVnD
        jqmcrzl5pzMV5bBy3WXHzWoaX0+Ze/RQR293eEKI6M7hzwurtK6X0zm8TagzmLNYNVefvaODF8G9KdDF
        iqIKheh2JZEnHejhJvbTxZQsW+8/L6zaMvz1kVXMNgTKqrNeKplmKQRdnMDzjhe6WIEDIqt1IAWBis8n
        ICPQdTwx6pywStNsHFmlvKzmSibQiNehhgFY2V5IWUE/KE1RVFPSuoBxCt5GeD6dyqecuH1OWLGgcpwV
        3F2HOtm0uUZZ2V74GPlMw2FmVlPmOiPFeDm/4Tyxwj//cVbraFRSPDQlTddFysrabkrtClgNMFZVc90y
        K5BR2Jk73Duw3u9lFdhZ49NYHZQGpIHpar1eH5CmL2uMFStupKwGECXVtHnoYkUOzOvXTbPEki7KCvkA
        K2uaPXALE6exyoRm6vWZv/916ytTql4eYqyYFzqsWLgKDZh7hoNqryQN4OHP6V4TYAWTPbZdBXMz4Wms
        OOGTv93a2mhFvy5JfwgpFivqVZSPK1yFJPPAtivSgUhHj3+O4YmxEhirIHICncqKe8Du2bT95f2vBJsV
        emHdYmWHK6m047BagFAXx5yCpvMpPY2TrswHnbnqgIgGjfew+j27VcWDv7U+Zf0gSOA4cYbycTLRAamk
        2ayMOWA1HapjUgFILFaC0w8GZaHLXsLEi3dYzdoDuBiXS3cYq2g0uuViRTiOICvoBq3QLkkDTmg3xoFV
        tf7RzNSAhPMPJ7AKiKyFuWN2lcMi2BwbSusvLFSLrxwfhPDOj1BbskN7XDJfOqHdOARWU3/fuB+aqZbA
        VIPLinoAxSXk9Rx8B/rw3LIu12B8IrcT+VQT7yYXjUY3F7dEjrNR8FxmktqSzUqSSqtOuDIgNZueud9q
        bd761xSYMcw4BJaVUyZFWQmzRYy1sbZcK8espwd+ysxqyxDzTcfHRAVYTTndILy0j5LOqCoNVGdu4X37
        Xu0ApJyeCC4rqOuksljhv/6u6QGgar3IiU1dzzuGUwFWGLgpqwGp5MoYlpLDofrMrQ3k/DFlNAGjTjh/
        InAVyRYomxUXYwHFQyu9H41GHz3JiU1ZluUEncTjeXIFWEG4Ui2zUgsOq/17F+b/fJ/57w122rbezqeK
        uRQrIAmOXKgoK3zeotViv2tfv/v71h8NUUwDKlluM9Mi/RDbMXnCBH5aktZZZCfEKNy+eOEvT9m9sT52
        fg9W2+hy0FzQ/gKMFZfPc1yiaTWxN+3rcrn/z4KNSh8d1dF8yM4IjVGlDi5SDEhsgEMMZeebkXq988en
        i4jqgfN7OKGZypcDuJHJ+QrUriBVKNusKK2MLMv5td8pQkpHVMmVQkbbRSRHMxiuzHEDWUmSuYAMlduX
        R+qhmSMu9/oV3kjMjoqu8wZP9uWjXSWaXLHm/VJiR5bl8u1QIUWtKrlE+EJYyxCeN97U0fFKmvEzyxg6
        BFCFcOxTn0uJovHF080HnfPByqLFlcGuiu1ajXaE9rci+7Is17Z34H/ggCuE5zPhMLICa5LA8Qo0eaBz
        V+Q2oJrcviPL7aaYe734pKb5YPmvITjCy2/L2JcLniAmCByfAETP2hSVnATLyYTDCuFJ5jJLPw1MHqao
        CxIFmkMKlxqVZTkt5vg3nYmM96QBlgCZetlHiYnUGCXGCgKVEg4rEK5GcOBs0lfACkK+AawmK9AXJGVZ
        TglDk5122HNO/+8Pkoqpmu4JUy6JHlY6ssqEw2GeJ99C5YdkzhnGGnjdlFTiCU8EYzIUuokTeUvL0C8o
        6q7sjVj4SwUjMHcfzU3U8ljsMgFLqHrZ/V08Qh90WO0zH+SJBsY0DfGcYDdYlUoFwouCcDM080YQRYPv
        gGHpne138r6HlUgKmbCm+Z8kcFYl1JocFvTocnsin/aHKUdc2csKYnsBWBlvYEZmQFJ5UsC0HVgBKm6t
        PnIEqMj+PfhMe31Zli1WpJBRNE0Lh8NhLSiPiYmloD4jUXZu3ehjZIvlCharZIGyIgYueEEvSBScm5mS
        ShkD6K7VR3YEWHlOgl1R5en5C0iJKSguWE7T/1zyQ2LK0RSUKZns8DwP8UrBJArm1+kYGlgV4APct6HJ
        HcHgO/dcrOQinsxFKkwLtQKgYjs14d+o7adExbmDu57EgAWshlie4GZF4P1Dl0OTQyIhS8lkEjkvj+r6
        6AScngezUjIKoNKCMXcMKsacAnRLfkwoLu9ltctYYZ5QhZyK+WBIKoHxkFAodFkRCVlOAixdh/8lk0tw
        duhAFWqXYd9tbgMnPydUwcVqNAljHEiweBg4h+JSaZcQnq4TIisOsvaZgsjzlBHTvZQgCAYygjESRnbn
        V/ivIxByM7LEu1iBgTBW6HjTOGlM8yvKqoJZO/GzWoKOEBiFwwWwLkjQ3CLECI5PwhTpybCINb7xssLY
        Tte4WMACVhxiuyQafKXhQjWq8L7IDgNKrwJkXaKmZArE8E8JeEY5EHsgwVLC4QIPeAZwXENw7BwaALuC
        F/XbHCE7wzap5eV9JcPRyG7JTypIqDgOXEMDYLwXmOFk7sBqmbEyIDBhKsrzBAMWsOJ/B6zWBELejDBS
        0BdqL1695rD7CyuKkslozoorU4A8EA2L/ck1Lay4gCkTNivs2ixWkLdbrHAaBlhpEK5GjgTeuF3fRlT4
        wftPF5++AEqKolWO1taOoI7NrUBZFTMsW5oGyZIgiErYsatRCD20zy/gDDJjRYP7tGVXk0Pik0x9pm5Z
        lbwLzzp5rVWuvNk7fHlzZqY+suZldcZRAQhvi21YVAoYlhgOKw6rZHIF5q/AmQoY0I+xEmDkcznzoBXd
        +uutl8ysvo9GW1uf9fe/VE3TNHHh9fKRG9YZR8VZC1fEsGtVaJ8ezmTY2BYShkxYWdbROPTl5FKHEJyR
        CYd5orlY4TgaWV0Bw9q0HvH1xYvv+/sfRKPfvRjqf6PSCkFWVOMq0/Jf2pmTU5hAL9gQBWpYvCgSDMOK
        KOZEMaOxGD2KpAosQp/AKo656NpleHQcYxWNRjc2Whut11eOsLiBCg3Lju5nHxWrrPaIYFdIRFHEUYhG
        vnghinyHksqLgsjToRyd6oMBIbCCKg9kVcUxjnA0MrkFD+totVqPXnz99ffffbdQ6f9FclBhffdIP2Pl
        vlfk2ZW/27YGasAKLUx58nRLJEtz333//Yvox1azooUL1urggKQWwI13KCvsDjhy9HimXq/PhMbXsdbo
        duWIFegyQbXWDAtYQckVjsFivkejNxrW09ev2fO6Wk9EkWiKoi01BShhJyxnADMUydW3odDUtr353lAq
        WkH44Vo2m81e/fUbt1ExVvU3GLDOelS35QtZIOZiTMqTxUdW7Nm4IXKGtrqSvJcXBIMnxg7mopIBeCpI
        5b+PWNkNVipxtDGbrXpJ0eBe/wY2zAUG1QkhixQUxQpJ1LBarWgLLKv1pyv9P/7j7bNkMplg5W2/1kMD
        5jiSObqWzcLgcMGGJYrCr1eB1FsoDjnOKnSTBCRUWXI6biRFjm4u7FQUEDMssvUo+iL64HX/Nz8NDg4O
        9g1uJ5PLDMYPV7PZQQ3oABbcPVGac1hxPwEqLGXziSYNwfE/Jjcsot2crNcfb4+/XFitaAhMIwdre9+9
        2d3Ppzr7u9m+vr7B9WQS3U4Uf8q+/Xl4rgD52b+yWLImSaX1gmVa3AmomI0BqslgWRXIie8kQ+sQQvX6
        1NTj5y/RwjKZ8XfvVlZWVt6NP77UBxp8lkyLotjZX2nMz6vD08N7+fL+ZN91yMihvshcMJiPggt6UdGt
        O5TV5aAseblkwyJv6FQwFfT5Pz9++Mve8rt349uX6vW+wUFk1deXTIvpyJg0Xd0ef7c8mrx38WIk+W7l
        4JfHVTSbknSgYIk/2JWb1AArAmR2NeS/kgDIzp/nrrtYUb2F0RtaG+OEhmUIy2NqNa63kxcv3Evq7UQ5
        H4vFZvcH+7KhanXq7bWrBWIY3E9Xs1l7LzSNUuxHSNxnrIdZBUrWyHC1JMWtfTVMVatyHUKVxWpfFO5E
        hqvr7eULF0b1RMxS3vzyn1ezfX2QPMDAB/tB5nUsUbhNX0PiXl/DXiGgAd6Y+9yUBqwNpqgBtnnkrYOq
        7x8CZTXeHr1wUddtVLFYZvVgb3igZG7vwSKiAYlENsvCOaIKGQcY1HCbxbeu/MJ/RWdYBjGgbxM6czgY
        mbasq2oVrlODwoA1+KNAjJNZwWjHlijymF8xy8pm3/7znwWB2OBCl+BXGgbO+vkv6IzK9dcVRcGYY2YA
        3jhleSCa1eDPw5g0VAyenMyK5RL2yfoHEdbbanwKxjpZTRQFNCz1W7Ay1/KE/6LOoIwCj8M5W8azMXyU
        C/KatrckZfsGB98ORyIDg319/xZE4xS78pxKNIhx1EdN6xroVx5aeWBl/jIDHaHFqhCEdVWiabgaAfN9
        qA57QALFRVHV69mQqg7D/ZrUt32DFbCY32aFHIzKr9euXevL/vrjj/0ZgxiiYeDmL3PhJp1pKGQySlhR
        gsDKgFUVGPdBlQFM96XxgUr0CV3YW81M3lw73Dbx4VzwvLzBfgxsv83KQFiEFIb6K8QgzlpEoSRJ5uHR
        TKi+llFg1SggPljoH6powItWY4SVzM74/Dw8RFBVB+qh+silNxXeILxycLiuwg12SjsGOO0HsMK4DYxo
        8HZEcFfhUD0UumkNsILhg5XKUH9//5UhOvyDOtBMZWdufH18fHzv+c83d4i9D4Lw2sJ66RAmAgsZZXdM
        ur7uZ5XifcHd6uVsoctVTKjH/aZen2QNSiYIrAwkpFUqVxgxtDFUJuN8c5oCiHCLcfyZFDKZzs5OTb5w
        wWGV6mhKBsP3iZQKNDAVeN54WTJLe1f+det/PoMGdEL/hZ1BgQ9aJqVVhoDYUAWWUh2nhEXVk2RAYNYq
        +0vlWCrVcb3PT4kvZCh7Gpl4nu88/3pzU1lcXHxhv9F/YWdQfh9UNM3vlLgKjXH/JBkGOKl10I/J8jCb
        EmuItlqtjxcXFzd5qyf0X9gZFPaDCrOoK5aJ2U7JGtDEtHCmcBqxUyihVZ7QQHBeenOx1XqkMS/0X9gZ
        FO9EKMcHjzmlixh1SjcxPyVwOQxMLkz+hr9swBz+V5ub//5PP80t/Bd2BsVb5mMRc/kgbfI3WE4J6asf
        0wkup3gb6Hsq5vYnj6IPH36d/c/9//0hQ3iCecgZn3Ewwu6YDhROc0pPA3VKB4CdfjMoTj7upgT2hXZZ
        kEzTVNWvv5KqV69ezYapgZ5lVtD907VR5nBDsO0Dv48HkO2UvgZWbWYRsKjYSBxM0OS2LzL3eck0JZxz
        fpu92ue/sjMmNrlgEICD2xgUJQyFBYLIa0NOohX2+6DLKY/lArTBa0zH7Qu6zUxn4VDCe7Vt//TTj/6L
        O4tit7EwDB63x2hhMAkNYDDzccV9O1u1TKxy5ZRezmo6bl9YlEP7BdzEuTt34DxONQiy7kElYgkMMzG7
        F/Tk8lbUYsRORUKbvMZkUzrbgelDZBEzYG+RYhEDe/J6IMR1TQMjs3zwmMv5mtyYgk7JLbdTKjBR4zYx
        V5DPEMMoaAWD5kaUEmZRmcLJLhe8W6d9mBwTO90poZZGtO73iPaV4QnwsODhxPv5M6aT5XFKFzHHKTUr
        1wSXo4WUgoizN91Dya33OqU/fPPdZEunySIG6Tgrn4Fe0cXp7PVy/wdbPKi3WizldQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>