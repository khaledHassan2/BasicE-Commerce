<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>